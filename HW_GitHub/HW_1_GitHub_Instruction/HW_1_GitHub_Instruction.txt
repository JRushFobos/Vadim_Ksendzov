GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
Через веб создаем внешний репозиторий с текстовым файлом 
 Repositories -> New -> указываем имя HW_1_GitHub_JSON -> Create repository

 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone git@github.com:JRushFobos/HW_1_GitHub_JSON.git

 6. Внутри локального JSON создать файл “new.json”.
 touch new.json

 7. Добавить файл под гит.
 git add new.json

 8. Закоммитить файл.
 git commit -m "add json file"

 9. Отправить файл на внешний GitHub репозиторий.
 git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 cat >> new.json
 {
    "name":"Евгений",
    "surname":"Мокрушин",
    "patronymic":"Павлович",
    "age":38,
    "pets":["cat","dog"],
    "desired_salary":80
}
Ctrl+D

 11. Отправить изменения на внешний репозиторий.
 gid add . && git commit -m "add text in new.json" && git push

 12. Создать файл preferences.json
 touch preferences.json
 {
    "favorite_movie":"Reach for Heaven",
    "favourite_TV show":"Dr. House",
    "favorite_food":"cutlet with puree",
    "favorite_time_of_the_year":"winter",
    "country_you_would_like_to_visit":"thailand"
}
Ctrl+D

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 cat >> preferences.json

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 touch sklls.json
 cat >> sklls.json
 {
    "skills_on_the_course": 
        [
        "Postgres",
        "HTTP",
        "SDLC",
        "STLC",
        "SQL",
        "Scrum ",
        "Jmeter "
        ]
}
Ctrl+D

 15. Отправить сразу 2 файла на внешний репозиторий.
 git add . && git commit -m "add sklls.json and preferences.json" && git push

 16. На веб интерфейсе создать файл bug_report.json.
  В веб интерфейсе создаем файл bug_report.json
 Add file -> Create new file -> Name: bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб делаем commit c сообщением
 Commit New File

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 в формате TXT.
 Через веб интерфейс добавляем информацию в файл bug_report.xml
 Choose bug_report.txt -> Edit this file
 {
        "ID": "A1",
        "Title": "Нажатие кнопки 'Перейти в каталог' на главной странице не перенаправляет на страницу Каталога",
        "Project": "Сайт магазина интим-товаров 'Штучки-дрючки'",
        "STR": [
                "1. Зайти на главную страницу сайта (ссылка_на_сайт)",
                "2. Нажать кнопку Каталог"
        ],
        "Enviroment":
        {
                "OS": "Windows 10 x64 build 19043",
                "Browser": "Google Chrome v96.0.4664.45 x64"
        },
        "Component": "Кнопка Каталог",
        "Build": "0.5.7",
        "Actual result": "Нажатие кнопки Каталог НЕ перенаправляет на страницу Каталога",
        "Expected result": "Нажатие кнопки Каталог перенаправляет на страницу Каталога",
        "Severity": "Critical",
        "Priority": "High",
        "Status": "Open",
        "Author": "Вадим Владиславович",
        "Sign to": "Ололошка Кеков",
        "Attachments": "ссылка_на_картинку_или_видео_с_багом"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб делаем commit c сообщением
 Commit New File

 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
 Создал внешний репозиторий через веб

 22. Клонировать репозиторий XML на локальный компьютер.
 git clone git@github.com:JRushFobos/HW_1_GitHub_XML.git

 23. Внутри локального XML создать файл “new.xml”.
touch new.xml

 24. Добавить файл под гит.
 git add new.xml

 25. Закоммитить файл.
 git commit -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
 git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
  cat >> new.xml
<?xml version="1.0"?>
  <Person>
    <LastName val="Евгений"/>
    <FirstName val="Мокрушин"/>
    <Patronym val="Павлович"/>
    <Age val="38"/>
    <Pets val="cat"/>
    <desired_salary val="80"/>
  </Person>
Ctrl+D

 28. Отправить изменения на внешний репозиторий.
 git add . && git commit -m "add xml text in file new.xml" && git push

 29. Создать файл preferences.xml
 touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 cat >> preferences.xml
 <?xml version="1.0"?>
<Person>
    <favorite_movie val="Reach for Heaven"/>
    <favourite_TV_show="Dr. House"/>
    <favorite_food="cutlet with puree"/>
    <favorite_time_of_the_year="winter"/>
    <Pets val="thailand"/>
</Person>
Ctrl+D

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat >> sklls.xml 
<head> skills_on_the_course </head>
   <i>Postgres</i>
   <i>HTTP</i>
   <i>SDLC</i>
   <i>STLC</i>
   <i>Jmeter</i>
   <i>SQL</i>
   <i>Scrum</i>
Ctrl+D

 32. Сделать коммит в одну строку.
 git add . && git commit -m "add sklls.xml and preferences.xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
 git push

 34. На веб интерфейсе создать файл bug_report.xml.
 В веб интерфейсе создаем файл bug_report.xml
 Add file -> Create new file -> Name: bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб делаем commit c сообщением
 Commit New File

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 Через веб интерфейс добавляем информацию в файл bug_report.xml
 Choose bug_report.xml -> Edit this file

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб интерфейс изменяем файл
 Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
 git pull


 TXT
 1. Создать внешний репозиторий c названием TXT.
 Через веб создаем внешний репозиторий с текстовым файлом 
 Repositories -> New -> указываем имя HW_1_GitHub_TXT -> Create repository
 
 2. Клонировать репозиторий TXT на локальный компьютер.
 get clone 
 
 3. Внутри локального TXT создать файл “new.txt”.
 touch new.txt

 4. Добавить файл под гит.
 git add .

 5. Закоммитить файл.
 git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
 git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 cat >> new.txt
 Мокрушин Евгений Павлович, 38 лет, 
 есть кошка и собака, ожидаемая  зараплата 80 т.р.
 Ctrl+D

 8. Отправить изменения на внешний репозиторий.
 git add . && git commit -m "add text in file new.txt" && git push

 9. Создать файл preferences.txt
 touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 cat >> preferences.txt
 Любимый фильм достучатся до небес, любимый серианл Доктор Хаус,
 любиая еда пюре с катлетой, любимое время года зима,
 хотел бы сьездить в Тайланд
 Ctrl+D

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 cat >>  sklls.txt
 Освим навыки работы с Postgres, HTTP, Jmeter
 Узнаем что такое  SDLC, STLC, Scrum
 Ctrl+D

 12. Сделать коммит в одну строку.
 git add . && git commit -m "add sklls.txt and preferences.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
 git push

 14. На веб интерфейсе создать файл bug_report.txt.
 В веб интерфейсе создаем файл bug_report.txt
 Add file -> Create new file -> Name: bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб делаем commit c сообщением
 Commit New File
 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 Через веб интерфейс добавляем информацию в файл bug_report.xml
 Choose bug_report.txt -> Edit this file
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Через веб интерфейс изменяем файл
 Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull
